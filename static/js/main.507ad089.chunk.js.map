{"version":3,"sources":["actions/actionTypes.js","actions/actionCreators.js","components/serviceEdit.jsx","components/serviceList.jsx","App.jsx","reducers/serviceList.js","reducers/serviceEdit.js","store/store.js","index.js"],"names":["FETCH_SERVICES_REQUEST","FETCH_SERVICES_FAILURE","FETCH_SERVICES_SUCCESS","UPDATE_SERVICE_REQUEST","UPDATE_SERVICE_FAILURE","UPDATE_SERVICE_SUCCESS","FETCH_SERVICE_REQUEST","FETCH_SERVICE_FAILURE","CHANGE_SERVICE_FIELD","FETCH_SERVICE_SUCCESS","REMOVE_SERVICE","fetchServicesRequest","type","removeService","dispatch","id","a","fetch","process","method","headers","response","ok","Error","statusText","saveServiceSuccess","saveServiceFailure","message","fetchServices","json","data","payload","items","error","fetchService","item","saveServiceRequest","name","price","content","saveService","config","body","JSON","stringify","ServiceEdit","match","useSelector","state","serviceEdit","loading","redirect","useDispatch","history","useHistory","useEffect","params","push","color","height","width","timeout","className","handleChange","evt","target","value","changeServiceField","onSubmit","preventDefault","form","htmlFor","onChange","onClick","ServiceList","props","serviceList","map","o","App","exact","path","to","component","initialState","reducer","combineReducers","action","filter","updateError","elem","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.507ad089.chunk.js","sourcesContent":["export const FETCH_SERVICES_REQUEST = 'FETCH_SERVICES_REQUEST';\nexport const FETCH_SERVICES_FAILURE = 'FETCH_SERVICES_FAILURE';\nexport const FETCH_SERVICES_SUCCESS = 'FETCH_SERVICES_SUCCESS';\nexport const UPDATE_SERVICE_REQUEST = 'UPDATE_SERVICE_REQUEST';\nexport const UPDATE_SERVICE_FAILURE = 'UPDATE_SERVICE_FAILURE';\nexport const UPDATE_SERVICE_SUCCESS = 'UPDATE_SERVICE_SUCCESS';\nexport const FETCH_SERVICE_REQUEST = 'FETCH_SERVICE_REQUEST';\nexport const FETCH_SERVICE_FAILURE = 'FETCH_SERVICE_FAILURE';\nexport const CHANGE_SERVICE_FIELD = 'CHANGE_SERVICE_FIELD';\nexport const FETCH_SERVICE_SUCCESS = 'FETCH_SERVICE_SUCCESS';\nexport const REMOVE_SERVICE = 'REMOVE_SERVICE';","import {\n  CHANGE_SERVICE_FIELD,\n  FETCH_SERVICES_REQUEST,\n  FETCH_SERVICES_FAILURE,\n  FETCH_SERVICES_SUCCESS,\n  FETCH_SERVICE_REQUEST,\n  FETCH_SERVICE_SUCCESS,\n  FETCH_SERVICE_FAILURE,\n  UPDATE_SERVICE_REQUEST,\n  UPDATE_SERVICE_SUCCESS,\n  UPDATE_SERVICE_FAILURE,\n  REMOVE_SERVICE,\n} from './actionTypes';\n\nexport const fetchServicesRequest = () => ({\n  type: FETCH_SERVICES_REQUEST,\n});\n\nexport const fetchServicesFailure = error => ({\n  type: FETCH_SERVICES_FAILURE,\n  payload: {\n    error,\n  },\n});\n\nexport const fetchServiceFailure = error => ({\n  type: FETCH_SERVICE_FAILURE,\n  payload: {\n    error,\n  },\n});\n\nexport const fetchServicesSuccess = items => ({\n  type: FETCH_SERVICES_SUCCESS,\n  payload: {\n    items,\n  },\n});\n\nexport const fetchServiceSuccess = item => ({\n  type: FETCH_SERVICE_SUCCESS,\n  payload: {\n    item,\n  },\n});\n\nexport const changeServiceField = (name, value) => ({\n  type: CHANGE_SERVICE_FIELD,\n  payload: {\n    name,\n    value,\n  },\n});\n\nexport const removeServiceRequest = id => ({\n  type: REMOVE_SERVICE,\n  payload: {\n    id,\n  },\n});\n\nexport const fetchServiceRequest = id => ({\n  type: FETCH_SERVICE_REQUEST,\n});\n\nexport const removeService = async (dispatch, id) => {\n  dispatch(fetchServicesRequest());\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    })\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    dispatch(saveServiceSuccess());\n  } catch (e) {\n    dispatch(saveServiceFailure(e.message));\n  }\n  fetchServices(dispatch);\n}\n\nexport const fetchServices = async dispatch => {\n  dispatch(fetchServicesRequest());\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}`)\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    const data = await response.json();\n    dispatch(fetchServicesSuccess(data));\n  } catch (e) {\n    dispatch(fetchServicesFailure(e.message));\n  }\n}\n\nexport const fetchService = async (dispatch, id) => {\n  dispatch(fetchServiceRequest());\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/${id}`)\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    const data = await response.json();\n    dispatch(fetchServiceSuccess(data));\n  } catch (e) {\n    dispatch(fetchServiceFailure(e.message));\n  }\n}\n\nexport const saveServiceRequest = (name, price, content) => ({\n  type: UPDATE_SERVICE_REQUEST,\n  payload: {\n    name,\n    price,\n    content\n  },\n})\n\nexport const saveServiceFailure = error => ({\n  type: UPDATE_SERVICE_FAILURE,\n  payload: {\n    error,\n  },\n});\n\nexport const saveServiceSuccess = () => ({\n  type: UPDATE_SERVICE_SUCCESS,\n});\n\n\nexport const saveService = async (dispatch, id, name, price, content) => {\n  dispatch(saveServiceRequest());\n  try {\n    const config = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        id,\n        name,\n        price,\n        content\n      })\n    }\n    const response = await fetch(process.env.REACT_APP_API_URL, config)\n    if (response.ok) {\n      dispatch(saveServiceSuccess());\n      return response\n    } else {\n      dispatch(saveServiceFailure(\"error\"));\n    }\n  } catch (e) {\n    dispatch(saveServiceFailure(e.message));\n  }\n}","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchService, changeServiceField, saveService } from '../actions/actionCreators';\nimport { useHistory } from 'react-router-dom';\nimport Loader from \"react-loader-spinner\";\n\nimport '../App.css';\n\nexport default function ServiceEdit({ match }) {\n  const { item, loading, error, redirect } = useSelector(state => state.serviceEdit);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    fetchService(dispatch, match.params.id);\n  }, [dispatch, match.params.id])\n\n  if (redirect) {\n    history.push(\"/services\");\n  }\n\n  if (loading) {\n    return (\n      <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"errorBlock\">\n        <p className=\"errorText\">Something went wrong try again</p>\n      </div>\n    );\n  }\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    dispatch(changeServiceField(name, value));\n  };\n\n  const cancel = () => {\n    history.push(\"/services\");\n  }\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    let form = evt.target;\n    saveService(dispatch, match.params.id, form.name.value, form.price.value, form.content.value);\n  }\n\n  return (\n    redirect ? null :\n      <form id=\"form\" onSubmit={handleSubmit}>\n        <table>\n          <tbody>\n            <tr>\n              <td><label htmlFor=\"name\">Название</label></td>\n              <td><input id=\"name\" name=\"name\" onChange={handleChange} value={item.name} /></td>\n            </tr>\n            <tr>\n              <td><label htmlFor=\"satisfaction\">Стоимость</label></td>\n              <td><input id=\"price\" name=\"price\" onChange={handleChange} value={item.price} /></td>\n            </tr>\n            <tr>\n              <td><label htmlFor=\"content\">Описание</label></td>\n              <td><input id=\"content\" name=\"content\" onChange={handleChange} value={item.content} /></td>\n            </tr>\n            <tr>\n              <td><button type=\"cancel\" onClick={() => cancel()}>Отмена</button></td>\n              <td><button type=\"submit\">Сохранить</button></td>\n            </tr>\n          </tbody>\n        </table>\n      </form>\n  );\n}","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeService, fetchServices } from '../actions/actionCreators';\nimport { useHistory } from 'react-router-dom';\nimport Loader from \"react-loader-spinner\";\nimport '../App.css';\n\nexport default function ServiceList(props) {\n  const { items, loading, error } = useSelector(state => state.serviceList);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    fetchServices(dispatch);\n  }, [dispatch])\n\n  const handleRemove = id => {\n    removeService(dispatch, id);\n  }\n\n  const handleEdit = id => {\n    history.push(`/services/${id}`);\n  }\n\n  if (loading) {\n    return (\n      <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    )\n  }\n\n  if (error) {\n    return (\n      <div className=\"errorBlock\">\n        <p className=\"errorText\">Something went wrong try again</p>\n      </div>\n    );\n  }\n\n  return (\n    <table>\n      <tbody>\n        {items.map(o => (\n          <tr key={o.id}>\n            <td>{o.name}</td>\n            <td>{o.price}</td>\n            <td>\n              <button onClick={() => handleEdit(o.id)}>\\</button>\n              <button onClick={() => handleRemove(o.id)}>x</button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}","import './App.css';\nimport { BrowserRouter as Router, Switch, Redirect, Route } from 'react-router-dom';\nimport ServiceEdit from './components/serviceEdit';\nimport ServiceList from './components/serviceList';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/services\" />\n            </Route>\n            <Route path=\"/services\" exact component={ServiceList} />\n            <Route path=\"/services/:id\" component={ServiceEdit} />\n          </Switch>\n      </Router>\n    </div>\n  );\n}","import {\n  FETCH_SERVICES_REQUEST,\n  FETCH_SERVICES_FAILURE,\n  FETCH_SERVICES_SUCCESS,\n  REMOVE_SERVICE,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  items: [],\n  loading: false,\n  error: null,\n};\n\nexport default function serviceListReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_SERVICES_REQUEST:\n      return {\n        ...state,\n        loading: true,\n          error: null,\n      };\n    case FETCH_SERVICES_FAILURE:\n      const {\n        error\n      } = action.payload;\n      return {\n        ...state,\n        loading: false,\n          error,\n      };\n    case FETCH_SERVICES_SUCCESS:\n      const {\n        items\n      } = action.payload;\n      return {\n        ...state,\n        items,\n        loading: false,\n          error: null,\n      };\n    case REMOVE_SERVICE:\n      const {\n        id\n      } = action.payload;\n      return {\n        ...state,\n        items: state.items.filter(o => o.id !== id)\n      };\n    default:\n      return state;\n  }\n}","import {\n  CHANGE_SERVICE_FIELD,\n  FETCH_SERVICE_FAILURE,\n  FETCH_SERVICE_REQUEST,\n  FETCH_SERVICE_SUCCESS,\n  UPDATE_SERVICE_REQUEST,\n  UPDATE_SERVICE_SUCCESS,\n  UPDATE_SERVICE_FAILURE,\n  FETCH_SERVICES_REQUEST\n} from '../actions/actionTypes'\n\nconst initialState = {\n  item: {\n    name: '',\n    price: '',\n    content: ''\n  },\n  loading: false,\n  error: null,\n  redirect: false,\n};\n\nexport default function serviceEditReducer(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SERVICE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n          error: null,\n      };\n    case FETCH_SERVICE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n          error: null,\n      };\n    case FETCH_SERVICE_SUCCESS:\n      const {\n        item\n      } = action.payload;\n      return {\n        item,\n        loading: false,\n          error: null,\n          redirect: false,\n      };\n    case FETCH_SERVICE_FAILURE:\n      const {\n        error\n      } = action.payload;\n      return {\n        ...state,\n        loading: false,\n          error,\n      };\n    case UPDATE_SERVICE_FAILURE:\n      const {\n        updateError\n      } = action.payload;\n      return {\n        ...state,\n        loading: false,\n          error: updateError,\n      };\n    case UPDATE_SERVICE_SUCCESS:\n      return {\n        ...initialState,\n        redirect: true,\n      };\n    case CHANGE_SERVICE_FIELD:\n      const {\n        name, value\n      } = action.payload;\n      const {\n        elem\n      } = state;\n      return {\n        ...state,\n        item: {\n          ...elem,\n          [name]: value,\n        }\n      };\n    case FETCH_SERVICES_REQUEST:\n      return {\n        ...state,\n        redirect: false,\n      };\n    default:\n      return state;\n  }\n}","import {\n  createStore,\n  combineReducers\n} from \"redux\";\nimport serviceListReducer from '../reducers/serviceList';\nimport serviceEditReducer from '../reducers/serviceEdit';\n\nconst reducer = combineReducers({\n  serviceList: serviceListReducer,\n  serviceEdit: serviceEditReducer,\n});\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store/store';\nimport {\n  Provider\n} from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}